daemon off;
pid /tmp/nginx.pid;

user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /dev/stderr warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections 1024;
}

http {
    # Includes mapping of file name extensions to MIME types of responses
    # and defines the default type.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Name servers used to resolve names of upstream servers into addresses.
    # It's also needed when using tcpsocket and udpsocket in Lua modules.
    #resolver 208.67.222.222 208.67.220.220;

    # Don't tell nginx version to clients.
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable.
    client_max_body_size 10m;

    # Timeout for keep-alive connections. Server will close connections after
    # this time.
    keepalive_timeout 65;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write().
    sendfile on;

    # Don't buffer data-sends (disable Nagle algorithm).
    # Good for sending frequent small bursts of data in real time.
    tcp_nodelay on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames.
    #tcp_nopush on;


    # Path of the file with Diffie-Hellman parameters for EDH ciphers.
    #ssl_dhparam /etc/ssl/nginx/dh2048.pem;

    # Specifies that our cipher suits should be preferred over client ciphers.
    ssl_prefer_server_ciphers on;

    # Enables a shared SSL cache with size that can hold around 8000 sessions.
    ssl_session_cache shared:SSL:2m;


    # Enable gzipping of responses.
    #gzip on;

    # Set the Vary HTTP header as defined in the RFC 2616.
    gzip_vary on;

    # Enable checking the existence of precompressed files.
    #gzip_static on;

    # for ELB
    real_ip_header X-Forwarded-For;
    set_real_ip_from 10.0.0.0/8;

    # Specifies the main log format.
    log_format main '{'
        '"time_iso8601": "$time_iso8601", '
        '"remote_user": "$remote_user", '
        '"session": "$http_x_session", '
        '"status": "$status", '
        '"request": "$request", '
        '"bytes_sent": "$bytes_sent", '
        '"request_length": "$request_length", '
        '"request_time": "$request_time", '
        '"upstream_response_time": "$upstream_response_time", '
        '"upstream_header_time": "$upstream_header_time", '
        '"upstream_connect_time": "$upstream_connect_time", '
        '"http_x_forwarded_for": "$http_x_forwarded_for", '
        '"http_x_forwarded_proto": "$http_x_forwarded_proto", '
        '"http_x_forwarded_host": "$http_x_forwarded_host", '
        '"upstream_bytes_received": "$upstream_bytes_received", '
        '"upstream_response_length": "$upstream_response_length", '
        '"http_referer": "$http_referer", '
        '"gzip_ratio": "$gzip_ratio", '
        '"msec": "$msec", '
        '"upstream_status": "$upstream_status", '
        '"http_user_agent": "$http_user_agent", '
        '"http_content_type": "$http_content_type", '
        '"sent_http_content_type": "$sent_http_content_type", '
        '"http_x_amzn_trace_id": "$http_x_amzn_trace_id", '
        '"http_accept_language": "$http_accept_language", '
    '"":""}';

    # Sets the path, format, and configuration for a buffered log write.
    access_log /dev/stdout main;


    # Includes virtual hosts configs.
    #include /etc/nginx/conf.d/*.conf;
    upstream backend {
        server 127.0.0.1:8001;
        keepalive 32;
    }

    server {
        listen 0.0.0.0:8000;
        client_body_buffer_size 800k;

        location = /__lbheartbeat__ {
            access_log off;
            default_type text/plain;
            return 200;
        }

        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        }
    }
}
